{
  "hash": "ae160611f559a2e880cdce3d6efe8d06",
  "result": {
    "markdown": "# Hypothesetoetsen {#sec-hypotest}\n\nIn een experiment zijn 10 planten die meststof A hebben gekregen vergeleken met 10 planten die meststof B hebben gekregen. Op de plantmassa-data is een t-toets losgelaten. Er wordt getest met een $\\alpha$ van 0,05:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Week1_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(df$plantlengte ~ df$meststof)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  df$plantlengte by df$meststof\nt = 5.7731, df = 17.961, p-value = 1.815e-05\nalternative hypothesis: true difference in means between group A and group B is not equal to 0\n95 percent confidence interval:\n 1.528639 3.278186\nsample estimates:\nmean in group A mean in group B \n       4.921148        2.517736 \n```\n:::\n:::\n\n\n::: {#exr-hypothesetoetsen}\n\n## Hypothesetoetsen\n\n\n-   Omschrijf de H~0~ en de H~1~\n-   omschrijf in eigen woorden wat de p-waarde betekent\n-   Er komt een p-waarde uit van 0,02. Wat is de conclusie?\n-   Hoe groot is de kans op een type-I-fout?\n:::\n\n::: callout-warning\nHeb je moeite met bovenstaande opdracht, lees dan eerst nog eens goed hoofstuk 6 van het boek *The Analysis of Biological Data*.\n:::\n\n\n## Power\n\nBij hypothesetoetsen doe je een uitspraak op basis van waarschijnlijkheid. Daarbij kan je ofwel de juiste conclusie trekken, danwel de verkeerde ...\n\nAls de nulhypothese waar is, en je tóch de H~0~ verwerpt, dan maak je een type-I-fout. Die fout heb je in de hand, want dat is de drempelwaarde $\\alpha$ die je meestal op 0,05 stelt.\n\nMaar ten onrechte de H~0~ NIET verwerpen heb je minder controle over. Deze fout wordt de type-II-fout genoemd.\n\n::: {#exr-type2fout}\n### type-II-fouten\n\n-   omschrijf in eigen woorden de type-II-fout\n-   bedenk 3 manieren om de kans op type-II-fout te verkleinen voor het voorbeeld van de vorige opgave\n:::\n\n## Meerdere factoren\n\n::: {#exr-design}\n\n\n\nBenoem voor ieder van de volgende *Experimental Designs* het onderscheidende kenmerk, en benoem de voordelen van dit kenmerk\n\n* Factorial Design\n* Randomized block design\n* Completely randomized design\n\n:::\n\n### Power berekenen\n\nDe power van een toets is de waarschijnlijkheid dat, als er een verschil is, deze ook wordt aangetoond (dus een p-waarde onder de drempelwaarde $\\alpha$).\n\n::: callout-note\nVoor de wiskundigen onder jullie: de power is gelijk aan 1 - de kans op een type-II-fout.\n:::\n\nDe power is afhankelijk van de volgende parameters:\n\n-   Het verschil tussen de twee groepen (in de situatie van een onafhankelijke t-toets).\n-   De hoeveelheid (random!) variatie, meestal uitgedrukt met de term standaarddeviatie.\n-   De gebruikte $\\alpha$.\n-   De hoeveelheid herhalingen\n\nWeet je alle parameters, op een na, dan kan je die andere parameter uitrekenen met de functie `power.t.test()`.\n\nHet voorbeeld van plantlengte en bemesting: Ik weet het verschil en de standaarddeviatie (want ik heb zelf die dataset verzonnen), en ik stel $\\alpha$ op 0,05. Dan kan ik uitrekenen wat de power is voor het experiment met 10 herhalingen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npower.t.test(n = 10, delta = 2, sd = 1, sig.level = 0.05, type = \"two.sample\", alternative = \"two.sided\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n     Two-sample t test power calculation \n\n              n = 10\n          delta = 2\n             sd = 1\n      sig.level = 0.05\n          power = 0.988179\n    alternative = two.sided\n\nNOTE: n is number in *each* group\n```\n:::\n:::\n\n\nHet argument n staat voor het aantal herhalingen per groep, delta staat voor het verschil in gemiddelde tussen de groepen (wellicht kan je het symbool $\\delta$ nog uit de wiskunde) en sd staat voor standaarddeviatie. De power is het enige argument dat niet is ingevuld in de code, en deze wordt dan ook uitgerekend. In dit geval is de power 0,99. Dat is enorm hoog, meestal zijn we al tevreden met een power van 0,8!\n\n::: {#exr-powerberekenen}\n### Power berekenen\n\n-   Verander bovenstaande code op zo'n manier dat je erachter komt hoeveel herhalingen je moet hebben om een power van 0,8 te krijgen.\n-   Idem voor het geval je eenzijdig gaat toetsen.\n:::\n\n::: callout-warning\nHeb je geen idee meer wat een- of tweezijdig toetsen is, lees dan nóg een keer goed hoofstuk 6 van het boek *The Analysis of Biological Data*, en dan met name 6.5: *One-sided tests*.\n:::\n\n## Power testen in de praktijk\n\nIn de praktijk weet je, voordag je een experiment gaat uitvoeren, niet wat precies de variatie en het verschil zal zijn. Die moet je gaan schatten vanuit de voorgaand experiment of vanuit de literatuur over soortgelijke experimenten.\n\nWanneer je een inschatting hebt van de standaarddeviatie en het minimale verschil wat je wilt kunnen aantonen, dan kan je voor een gekozen aantal herhalingen berekenen wat de power is. Andersom kan ook: je wilt een minimale power hebben (meestal minstens 0,8), dan kan je berekenen hoeveel herhalingen je daar minimaal voor nodig hebt.\n\nNeem nu weer als voorbeeld het experiment van de plantlengte. Stel dat we alleen deze dat hebben en voor vervolgonderzoek willen uitvogelen hoeveel herhalingen we nodig hebben.\n\nDe eerste vraag die je jezelf (of je opdrachtgever) moet stellen is welke minimale verschil nog interessant is in de praktijk. In dit geval gaat het om plantengroei, en een verschil van 0,5 cm in dit plantstadium is voor de opdrachtgever nog interessant. Dan hebben we een delta van 0,5 cm.\n\nUit de voorgaande proef kunnen de standaarddeviatie halen. Dat vereist wel wat stappen, omdat je de standaarddeviatie wilt hebben ten opzichte van de gemiddeldes van beide groepen.\n\nDat worden de **residuen** genoemd. Voordat de residuen gebruikt kunnen worden voor schatting van standaarddeviatie moeten die nog gecorrigeerd worden voor de t-verdeling.\n\nDat doe je op de volgende manier:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# eerst via functie het statistisch model schatten\nt <- lm(df$plantlengte ~ df$meststof)\n# vervolgens de, voor t-verdeling gecorrigeerde, residuen berekenen\nr <- rstudent(t)\n# en als laatste stap de standaarddeviatie berekenen\nsd(r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.091176\n```\n:::\n:::\n\n\nDie schatting zit mooi dicht bij de werkelijke waarde (sd = 1).\n\nHerintroductie van zalm kan bemoeilijkt worden door de aanwezigheid van forel. In een onderzoek hebben ecologen in verschillende beken waar forel wel of niet aanwezig was zalmen uitgezet en gekeken welke fractie zalmen overleefd had. De data staat in hoofdstuk 12 van *the Analysis of Biological Data*, tabel 12.4.\n\n::: {#exr-powerberekenen2}\n### Power berekenen in de praktijk\n\n-   neem de data over in Excel\n-   Maak en script waarin je de Excel importeert\n-   voer een onafhankelijke t-toets uit op het effect van aanwezigheid forel op fractie overleven zalm.\n-   voer nu de stappen uit om uit te rekenen hoeveel herhalingen je nodig hebt om het gevonden verschil statistisch hard te maken (met een power van 0,8). Haal daarbij het gemiddelde verschil en de standaardeviatie uit de dataset.\n:::\n",
    "supporting": [
      "Week1_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}