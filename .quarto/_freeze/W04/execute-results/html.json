{
  "hash": "0387c73a46a0989dfa2df4aae65511ae",
  "result": {
    "markdown": "# Lineair models 1: Linear Regressie\n\nR has a function to fit the best linear model in a dataset.\nMost statistical tests (linear regression, one-way ANOVA, two-way ANOVA) are based on this linear model.\nThe most intuitive linear model is a straight line through a cloud of data points.\nThat is what you are doing with a linear regression.\n\nThe function to fit the linear model is `lm()`.\nLike the t.test it's first argument is statistical formula: `response ~ explanatory`.\nIn all cases the response vector needs to be numerical vector, otherwise you will get an error.\nIn the case of a linear regression, the explanatory vector also needs to be an numerical vector.\n\nIn you data map you'll find a file called ijklijn.xlsx.\nIt is (not the best) calibration line for a colorimetric measurements:\nstarch concentration:\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Calibration line\n\n| absorptie| concentratie|\n|---------:|------------:|\n|     0.000|        0.000|\n|     0.030|        0.125|\n|     0.060|        0.250|\n|     0.176|        0.500|\n|     0.249|        0.750|\n|     0.285|        1.000|\n:::\n:::\n\n\nTo avoid complications with further functions (like `predict()`), we use an extra argument `data` to refer to the data frame object and we only use the column names (without `object$`) in the statistical model.\n\n\n::: {#exr-calibration}\n\nCalibration line\n\nMake script that runs:\n  \n* importing the data set\n* fit the best model: NB: store the output as an object using <- \n* look at the output and try to understand the different numbers.\n* also run `summary()` with as argument the lm-object.\n  \n:::\n\nDid you find the R^2^?\nFor more details about the output of the `summary()` function: [see here](https://stats.stackexchange.com/questions/5135/interpretation-of-rs-lm-output){target=\"_blank\"}\n\n\n\n## Hypothesis testing\n\nAlthough it is not quite common to use regression analysis to test a hypothesis in this case: is there a relation between absorption and concentration), it is possible.\n\nWith the function `anova()` you apply an **analysis of variance**.\nIn short, it will test if the explanatory power of the variation in your data set by the statistical model is so good, that you can rule out the possibility that this is due to random effects.\n\nThe function `anova()` needs as argument the output of the function `lm()` (that's why you needed to store the output van lm as an object).\n\nThe function `anova()` creates an ANOVA table with for the explanory variable the p-value (here called **Pr(>F)**).\n\n::: {#exr-hypotest}\nHypothesis testing \n\n* Apply the function `anova()` on the linear model of ijklijn\n* Is there a significant relation between both vectors?\n\n:::\n\n## Predictions\n\nThe most common use of regressions is to make predictions.\nIn the case of a calibration line, you want to use it to estimate the concentration in unknown samples based on the absorption.\n\nYou probably have done such measurements in the past by first estimate the regression line and use the parameters of that line to calculate the estimated concentrations.\n\nLuckily in R there is the function `predict()`.\nThe negative side is that the function is a bit picky about the arguments.\nThe first argument should be the output of the lm-function.\nSo far so good.\nThe next argument is the value(s) of the explanatory variable you want to make predictions for.\nUnluckily this argument should be in the format of a data frame Ã¡nd the column name should be exactly the same as in the statistical model.\n\nIt is quite easy to make a data frame:\n`df <- data.frame(absorptie = 1.5)`\n\nOf course you can use a different object name than df.\nInstead of one number you can make a longer vector, e.g. `c(1.5, 2.3, 5.4)`.\n\nAn interesting option is to calculate the confidence interval.\nJust add the argument `interval = \"confidence\"`).\n\n\n\n## practice\n\nIn an experiment we want to test the assumption that the weight gain of sow's are and indication of the birth weight van piglets.\nFor 10 sow's data is collected.\nYou can find the data in zeugen.xlsx in your data map.\n\n::: {#exr-piglets}\n\nPiglets\n\n* Apply a linear regression.\n* Check what the p-value and the R^2^ are.\n* Predict the expected piglet weight, and confidence interval, in the situation a sow will gain 15 kg\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}