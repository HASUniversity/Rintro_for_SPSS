{"title":"Logistic regression","markdown":{"headingText":"Logistic regression","containsRefs":false,"markdown":"\nUp to now you have practiced with hypothese test for numerical continuous data, but in some cases the data behaves differentially.\nA common type of data is binomial: categorical data with only two outcomes.\n\nFor example, a tomato grower is experimenting with the best time to harvest his tomatos:\n\n* On six plants all tomatoes are harvested 10 days before the normal harvest time\n* On four plants all tomatoes are harvested 5 days before the normal harvest time\n* On another six plants all tomatoes are harvested at the normal harvest time\n\nAll harvested tomatoes are labelled ripe or not ripe:\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n\nlibrary(readxl)\nlibrary(tidyverse)\ntheme_set(theme_classic(base_size = 16))\n\ntomaat <- read_excel('../data/tomaten.xlsx')\nknitr::kable(table(tomaat$tijd, tomaat$rijp))\n\n\n```\n\nZulke data kan je mooi presenteren in een mozaiekplot (In het Engels *mosaic plot* geheten):\nThis kind of data can be clearly presented in a mosaic plot (see script for inspiration):\n\n```{r echo=TRUE, message=FALSE, warning=FALSE}\nlibrary(ggmosaic)\n\ntomaat %>% \n  ggplot() +\n  geom_mosaic(aes(x=product(tijd), fill = rijp)) +\n  scale_fill_manual(values = c(\"green\", \"red\")) +\n  xlab(\"tijd (days before harvest)\") +\n  ylab(\"fraction ripe\") +\n  theme(legend.position = \"none\")\n\n```\n\nA nice feature of a mosaic plot is that you can read on both x- and y-axis which fraction is found in each category.\n\n::: {#exr-ggmosaic}\n\nmosaic plots\n\n* install the package ggmosaic\n* Import the data set tomaten.xlsx\n* Make a mosaic plot with above code\n* try to find out what each line of code is doing, writh down comments\n\n:::\n\n## binomial alternative for ANOVA's and linear regressions\n\nThe normal **linear model** cannot handle a binomial respons veriable.\nFor that you need to use a **generalized linear model**.\nThe function in R is `glm()`.\nYou can add your statistical model in the same way as in the function `lm()`, but you have to add an extra argument to make clear that your respons is binomial: `family = binomial()`.\n\n::: {.callout-warning}\n\nThe response variable needs to be either a numerical variable with two values, or a factor (use `factor()`)\n\n:::\n\n> H~0~: all harvest times have the same probability for ripe tomatoes\n\n> H~1~: at least some harvest times differ in probability for ripe tomatoes\n\n\n```{r, echo=TRUE, message=FALSE, warning=FALSE}\nfit <- glm(factor(rijp)~factor(tijd), family = binomial(), data = tomaat)\n\n```\n\nNB: the function `factor()` is used for the explanatory variable to make clear to R that the numerica data needs to be treated as categorical data. \n\nThe normal `anova()` function cannot handle the output of `glm()`.\nThe reason is that you cannot apply a normal analysis of variance on these type of models to calculate the p-values.\nInstead you need to use the `Anova()` function from the car package:\n\n\n```{r, echo=TRUE, message=FALSE, warning=FALSE}\ncar::Anova(fit)\n```\n\n\n::: {.callout-warning}\n\nThe package car contains a number of functions with the same name as functions in tidyverse.\nTherefore it is not practical to activate all functions.\nInstead use the code `car::Anova()` to make R clear in which package the function can be found.\n\n:::\n\n::: {#exr-carpackage}\n\ncar package\n\n* Install the car packages\n\n:::\n\n\n## Posthoc test\n\nSimilar as in normal ANOVA's you can apply a posthoc test with the function `emmeans()`\n\n\n```{r, echo=TRUE, message=FALSE, warning=FALSE}\nlibrary(emmeans)\nemmeans(fit, specs = pairwise ~ tijd)\n\n```\n\n\n## Practice\n\nA third year student Applied Biology is doing her internship at a grower and needs to test five different insecticides.\nShe designed the following experiment:\n\n* A certain number of flies is exposed to one of the five insecticides\n* after one hour she counts the number of dead and still alive flies\n\nYou find the data set in your data map: insecticiden.xlsx\n\n::: {#exr-insectices}\n\nInsecticides.\n\n\n* import the data set\n* Make a nice graph\n* apply a logistic regression\n* Test which insecticide kills significant more flies than the control\n\n:::\n\n\n## Regression with binomial data\n\nWe can also present the data in a different way:\n\n```{r echo=TRUE, message=FALSE, warning=FALSE}\ntomaat %>% \n  ggplot(aes(tijd, rijp, color = rijp)) + \n  geom_count() +\n  scale_color_manual(values = c(\"green\", \"red\")) \n```\n\nWith the function `geom_count()` completely overlapping points are represented with bigger dots.\nAlternative is `geom_jitter()` that randomly move the points a bit to reduce overlap.\n\nNow we have on the x-axis not categories, but a continuous scale.\n\nCan we do something with regression?\nThe answer is yes!\n\nAs with `lm()` the function `glm()` can perform both ANOVAs and regressions.\nThis time the regression is not linear, but logistic: a **logistic regression**.\n\n```{r, echo=TRUE, message=FALSE, warning=FALSE}\nfit2 <- glm(factor(rijp) ~ tijd, family = binomial(), data = tomaat)\n```\n\nThe only difference with the previous analysis is that now the variable tijd is NOT a factor.\n\n\n```{r, echo=TRUE, message=FALSE, warning=FALSE}\ncar::Anova(fit2)\n\n```\n\n\nFor the tomato grower it is important to know from what time at least 25% of the tomatoes is ripe.\n\nWe can visualise that by adding a trend line (this time `method = glm`) and a horizontal line through 0.25:\n\n```{r echo=TRUE, message=FALSE, warning=FALSE}\ntomaat %>% \n  mutate(rijp = recode(rijp, rijp=1, onrijp=0)) %>%\n  ggplot(aes(tijd, rijp)) + \n  geom_count() +\n  geom_smooth(method=glm, method.args = list(family = binomial())) +\n  ylab(\"Fractie rijp\") +\n  geom_hline(yintercept = 0.25, color = \"blue\", linetype = \"dashed\") +\n  theme(legend.position = \"none\") \n```\n\nNow you see the typical S-shape of a logistic regression.\nFrom five days before the normal harvest data the fraction ripe tomatoes is above the threshold.\n\n::: {.callout-warning}\n\nWithin ggplot the function `glm()` cannot handle a factor response, but only 0 and 1 values. With the `recode` you can change your text to other values.\n\n:::\n\n::: {#exr-guppies}\n\nGuppies\n\n\nPitkow *et al.* (1960) studied the effect of exposure to low temperature on the survival of guppies.\nHe exposed each time 40 guppies to water at 5Â°C, for 3, 8, 12 or 18 minutes. \n\n* import the data set (guppies.xlsx)\n* make a clear graph, add a trend line\n* apply a logistic regression\n* what are your conclusions\n\n:::\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"output-file":"W06.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.36","theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}}}